<?php

/**
 * @file
 * Render an administrative menu as a dropdown menu at the top of the window.
 */

/**
 * Implements hook_permission().
 */
function registro_clientes_permission() {
    return array(
        'entrada clientes' => array(
            'title' => t('Registro de clientes'),
            'description' => t('Registro de clientes'),
        ),
    );
}

/**
 * Implements hook_menu().
 */
function registro_clientes_menu() {
    $items = array();
// Module settings.
    $items['admin/content/inventario/registro_clientes'] = array(
        'title' => 'Registro de Clientes',
        'description' => 'Registro de Clientes.',
        'type' => MENU_NORMAL_ITEM,
        'page callback' => 'system_registro_clientes',
        'access arguments' => array('entrada clientes'),
    );
    $items['admin/content/inventario/clientes'] = array(
        'title' => 'Listado de Clientes',
        'page callback' => 'clientes_lista',
        'access arguments' => array('entrada clientes'),
        'access callback' => 'user_access',
        'type' => MENU_NORMAL_ITEM,
    );
    $items['admin/content/inventario/registro_clientes/edit'] = array(
        'title' => 'Editar Clientes',
        'description' => 'Entrada de Clientes.',
        'type' => MENU_NORMAL_ITEM,
        'page callback' => 'edit_registro_clientes',
        'access arguments' => array('entrada clientes'),
    );
    $items['admin/content/inventario/clientes/clientes_detalle'] = array(
        'title' => 'Reporte de Clientes',
        'description' => 'Reporte de Clientes.',
        'type' => MENU_NORMAL_ITEM,
        'page callback' => 'system_reporte_clientes',
        'access arguments' => array('entrada clientes'),
    );
    $items['admin/content/inventario/proveedores'] = array(
        'title' => 'Listado de proveedores',
        'page callback' => 'proveedores_lista',
        'access arguments' => array('entrada clientes'),
        'access callback' => 'user_access',
        'type' => MENU_NORMAL_ITEM,
    );
    $items['admin/content/inventario/proveedores/proveedores_detalle'] = array(
        'title' => 'Reporte de proveedores',
        'description' => 'Reporte de proveedores.',
        'type' => MENU_NORMAL_ITEM,
        'page callback' => 'system_reporte_proveedores',
        'access arguments' => array('entrada clientes'),
    );
    $items['admin/content/inventarios/reportes/getcsv/%/%'] = array(
        'page callback' => 'reportes2_get_csv',
        'page arguments' => array(4, 5),
        'access arguments' => array('view reportes'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function system_registro_clientes() {
    return drupal_get_form('registro_clientes_form');
}

function registro_clientes_form($form, &$form_state) {
    $form['name'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 100,
        '#title' => "Nombre del cliente:",
        '#required' => TRUE,
        '#description' => t('Ingrese el nombre del cliente.'),
    );
    $form['proveedor'] = array(
        '#type' => 'checkbox',
        '#title' => t('Proveedor'),
        '#description' => t('Este check hace que el cliente también sea un proveedor.'),
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => "Guardar",
    );
    return $form;
}

function registro_clientes_form_validate($form, &$form_state) {
    
}

function registro_clientes_form_submit($form, &$form_state) {
    $name = $form_state['values']['name'];
    $proveedor = $form_state['values']['proveedor'];
    $cliente = db_query("SELECT id_inventarios_clientes FROM inventarios_clientes WHERE nombre='$name'")->fetchField();

    if ($cliente) {
        drupal_set_message("El cliente $name ya existe, por favor intente de nuevo!", 'error');
    } else {
        if (db_query("INSERT INTO inventarios_clientes (nombre, estado, proveedor) values('$name', 1, $proveedor)")) {
            drupal_set_message("El cliente $name fue guardado existosamente!");
        } else {
            drupal_set_message("Error al guardar el cliente $name, por favor intente de nuevo!", 'error');
        }
        drupal_goto('admin/content/inventario/clientes');
    }
}

/* * **************************************************************************** */

function clientes_lista() {
// Build the header for the report table.
    $header = array(t('Edit'), t('Nombre'), 'Estado', 'Proveedor', 'Reporte');
// Build the header to the CSV export.
    $csv_rows = array(array(t('Edit'), 'Estado', t('Nombre'), 'Proveedor', 'Reporte'));
    $array_rows = array();
    $rows = array();

    $results = db_query("SELECT * FROM inventarios_clientes order by nombre");
    foreach ($results as $result) {
        if ($result) {
            $rows[] = array(
                l(('Editar'), 'admin/content/inventario/registro_clientes/edit/' . $result->id_inventarios_clientes),
                $result->nombre,
                ($result->estado) ? 'Activo' : 'Inactivo',
                ($result->proveedor) ? 'SI' : 'NO',
                l('ver »', 'admin/content/inventario/clientes/clientes_detalle/' . $result->id_inventarios_clientes),
            );
            $csv_rows[] = array(
                $result->nombre,
                ($result->estado) ? 'Activo' : 'Inactivo',
                "",
                ""
            );
        };
    }
//print_r($rows);
// Cache the CSV export.
//$csv_data = uc_reports_store_csv('matrias primas', $csv_rows);
// Build the page output holding the form, table, and CSV export link.
    $output = theme('table', array(
                'header' => $header,
                'rows' => $rows,
                'attributes' => array('class' => array('mytable')),
                'sort' => 'asc'
            ))
//. '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
            . '<br /><div class="uc-reports-links">' . l('Ingresar un nuevo cliente »', 'admin/content/inventario/registro_clientes') . '</div>'
            . '<br /><div class="uc-reports-links">' . l('Ingresar un nuevo proveedor »', 'admin/content/inventario/registro_proveedores') . '</div>';
    /* $output = theme('table', $header, $rows, array('width' => '100%', 'class' => 'uc-sales-table', 'style' => 'text-align: center'))
      . '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
      . '<br /><div class="uc-reports-links">' . l('Ingresar una nueva materia prima', 'admin/content/inventarios/registro_clientes') . '</div>';
      drupal_set_message(print_r($rows)); */
    return $output;
//return drupal_get_form('Clientes_lista_form');
}

/* * *************************************************************************** */

function edit_registro_clientes() {
    return drupal_get_form('edit_registro_clientes_form');
}

function edit_registro_clientes_form($form, &$form_state) {
    if (arg(4) == "edit" && arg(5) > 0) {
        $id_registro_clientes = arg(5);
        $nombre = db_query("SELECT nombre FROM inventarios_clientes where id_inventarios_clientes=$id_registro_clientes")->fetchField();
        $estado = db_query("SELECT estado FROM inventarios_clientes where id_inventarios_clientes=$id_registro_clientes")->fetchField();
        $proveedor = db_query("SELECT proveedor FROM inventarios_clientes where id_inventarios_clientes=$id_registro_clientes")->fetchField();
        $form['name'] = array(
            '#type' => 'textfield',
            '#size' => 30,
            '#maxlength' => 100,
            '#title' => "Nombre del cliente:",
            '#required' => TRUE,
            '#default_value' => $nombre,
            '#description' => t('Ingrese el nombre del cliente.'),
        );
        $form['estado'] = array(
            '#type' => 'checkbox',
            '#title' => t('Activo'),
            '#default_value' => $estado,
            '#description' => t('El check pone activo o desactivo al cliente.'),
        );
        $form['proveedor'] = array(
            '#type' => 'checkbox',
            '#title' => t('Proveedor'),
            '#default_value' => $proveedor,
            '#description' => t('Este check hace que el cliente también sea un proveedor.'),
        );
        $form['submit'] = array(
            '#type' => 'submit',
            '#value' => "Guardar",
        );
        return $form;
    } else {
        drupal_goto('admin/content/inventario/clientes');
    }
}

function edit_registro_clientes_form_validate($form, &$form_state) {
    
}

function edit_registro_clientes_form_submit($form, &$form_state) {
    if (arg(4) == "edit" && arg(5) > 0) {
        $id_registro_clientes = arg(5);
        $name = $form_state['values']['name'];
        $proveedor = 0;
        ($form_state['values']['proveedor']) ? $proveedor = 1 : '';
        $estado = 0;
        ($form_state['values']['estado']) ? $estado = 1 : '';
        if (db_query("UPDATE inventarios_clientes set nombre='$name', estado=$estado, proveedor=$proveedor
                        where id_inventarios_clientes=$id_registro_clientes")) {
            drupal_set_message("Se actualizo $name existosamente!");
        } else {
            drupal_set_message("Error al actualizar el cliente $name, por favor intente de nuevo!", 'error');
        }
        drupal_goto('admin/content/inventario/clientes');
    } else {
        drupal_goto('admin/content/inventario/clientes');
    }
}

/* * ************************************************************************************* */

function system_reporte_clientes_args() {
    if (arg(3) == "clientes" && arg(4) == "clientes_args") {
        // Build the header for the report table.
        $header = array(t('Cliente'), t('Reporte'));
        // Build the header to the CSV export.
        $csv_rows = array(array(t('Cliente'), t('Reporte')));
        $rows = array();
        $array_rows = array();
        $pre = $pos = "";

        $results = db_query("SELECT * FROM inventarios_clientes order by nombre asc");
        foreach ($results as $result) {
            if ($result) {
                $rows[] = array(
                    $result->nombre,
                    l('ver »', 'admin/content/inventario/reporte/alimento/' . $result->id_inventarios_clientes),
                );
                $csv_rows[] = array(
                    $result->nombre,
                    l('ver »', 'admin/content/inventario/reporte/alimento/' . $result->id_inventarios_clientes),
                );
            }
            $pre = $pos = "";
        }
        //print_r($rows);
        // Cache the CSV export.
        //$csv_data = uc_reports_store_csv('matrias primas', $csv_rows);
        // Build the page output holding the form, table, and CSV export link.
        $output = theme('table', array(
            'header' => $header,
            'rows' => $rows,
            'attributes' => array('class' => array('mytable')),
            'sort' => 'asc'
                ))
        //. '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
        ;
        /* $output = theme('table', $header, $rows, array('width' => '100%', 'class' => 'uc-sales-table', 'style' => 'text-align: center'))
          . '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
          . '<br /><div class="uc-reports-links">' . l('Ingresar una nueva materia prima', 'admin/content/inventarios/registro_materias') . '</div>';
          drupal_set_message(print_r($rows)); */
        return $output;
        //return drupal_get_form('materias_lista_form');
    }
}

/* * **************************************************************************************** */

/**
 * Stores a CSV file for a report in Drupal's cache to be retrieved later.
 *
 * @param $report_id
 *   A unique string that identifies the report of the CSV file.
 * @param $rows
 *   The rows (table header included) that make CSV file.
 *
 * @return
 *   An array containing the values need to build URL that return the CSV file
 *   of the report and the CSV data itself.
 */
function reportes2_store_csv($report_id, $rows) {
    global $user;
    $csv_output = '';
    $user_id = empty($user->uid) ? session_id() : $user->uid;
    foreach ($rows as $row) {
        foreach ($row as $index => $column) {
            $row[$index] = '"' . str_replace('"', '""', $column) . '"';
        }
        $csv_output .= implode(',', $row) . "\n";
    }
    cache_set('reportes_' . $report_id . '_' . $user_id, $csv_output, 'cache', REQUEST_TIME + 86400);
    return array('user' => $user_id, 'report' => $report_id, 'csv' => $csv_output);
}

/**
 * Retrieves a cached CSV report & send its data.
 *
 * @param $report_id
 *   A unique string that identifies the specific report CSV to retrieve.
 * @param $user_id
 *   The user id to who's retrieving the report:
 *   - uid: Equals uid for authenticated users.
 *   - sid: Equals session_id for anonymous users.
 */
function reportes2_get_csv($report_id, $user_id) {
    global $user;
    $user_check = empty($user->uid) ? session_id() : $user->uid;
    $csv_data = cache_get('reportes_' . $report_id . '_' . $user_id, 'cache');

    if (!$csv_data || $user_id != $user_check) {
        drupal_set_message(t("The CSV data could not be retrieved. It's possible the data might have expired. Refresh the report page and try to retrieve the CSV file again."), 'error');
        drupal_not_found();
        exit();
    } else {
        ob_end_clean();
        $http_headers = array(
            'Pragma' => 'private',
            'Expires' => '0',
            'Cache-Control' => 'private, must-revalidate',
            'Content-Transfer-Encoding' => 'binary',
            'Content-Length' => strlen($csv_data->data),
            'Content-Disposition' => 'attachment; filename="' . $report_id . '.csv"',
            'Content-Type' => 'text/csv'
        );
        foreach ($http_headers as $header => $value) {
            $value = preg_replace('/\r?\n(?!\t| )/', '', $value);
            drupal_add_http_header($header, $value);
        }

        print $csv_data->data;
        exit();
    }
}

/* * ************************************************************************ */
/*
  function proveedores_lista() {
  // Build the header for the report table.
  $header = array(t('Edit'), t('Nombre'), 'Reporte');
  // Build the header to the CSV export.
  $csv_rows = array(array(t('Edit'), t('Nombre'), 'Reporte'));
  $array_rows = array();

  $results = db_query("SELECT * FROM inventarios_proveedores order by nombre");
  foreach ($results as $result) {
  if ($result) {
  $rows[] = array(
  l(('Editar'), 'admin/content/inventario/registro_proveedores/edit/' . $result->id_inventarios_proveedores),
  $result->nombre,
  l('ver »', 'admin/content/inventario/proveedores/proveedores_detalle/' . $result->id_inventarios_proveedores),
  );
  $csv_rows[] = array(
  $result->nombre,
  ""
  );
  };
  }
  //print_r($rows);
  // Cache the CSV export.
  //$csv_data = uc_reports_store_csv('matrias primas', $csv_rows);
  // Build the page output holding the form, table, and CSV export link.
  $output = theme('table', array(
  'header' => $header,
  'rows' => $rows,
  'attributes' => array('class' => array('mytable')),
  'sort' => 'asc'
  ))
  //. '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
  . '<br /><div class="uc-reports-links">' . l('Ingresar un nuevo cliente »', 'admin/content/inventario/registro_clientes') . '</div>'
  . '<br /><div class="uc-reports-links">' . l('Ingresar un nuevo proveedor »', 'admin/content/inventario/registro_proveedores') . '</div>';
  /* $output = theme('table', $header, $rows, array('width' => '100%', 'class' => 'uc-sales-table', 'style' => 'text-align: center'))
  . '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
  . '<br /><div class="uc-reports-links">' . l('Ingresar una nueva materia prima', 'admin/content/inventarios/registro_clientes') . '</div>';
  drupal_set_message(print_r($rows)); */

//  return $output;
//return drupal_get_form('Clientes_lista_form');
//}

/* * ***************************************************************************************** */

function system_reporte_clientes() {
    /*     * ***************************************************************************
     * REPORTES DE ALIMENTOS
     * ***************************************************************************** */
    if (arg(3) == "clientes" && arg(4) == "clientes_detalle" && arg(5) > 0) {
        $por_fecha = "";
        if (arg(6) > 0 && arg(7) > 0) {
            $por_fecha = ' and api.fecha_ingreso between ' . "'" . arg(6) . "'" . ' and ' . "'" . arg(7) . "'";
        }
        $id_cliente = arg(5);
        $rows = array();
        //alimentos_preparados_id 	fecha_ingreso 	cantidad_preparacion 	cantidad_actual 	motivo
        // Build the header for the report table.
        $header = array('Cliente', 'Alimento', 'Monto Venta', 'Cantidad', 'Fecha de venta');
        // Build the header to the CSV export.
        $csv_rows = array(array('Cliente', 'Alimento', 'Monto Venta', 'Cantidad', 'Fecha de venta'));
        $array_rows = array();

        $total = 0;
        $total_monto = 0;

        //drupal_set_message($id_cliente);

        $query = "SELECT ap.nombre as alimento, ic.nombre as nombre, api.monto as monto, api.cant_salida as salida, 
                    api.fecha_ingreso as fecha
                    FROM inventarios_clientes AS ic
                    INNER JOIN alimentos_preparados_inventario AS api ON ic.id_inventarios_clientes = api.cliente
                    INNER JOIN alimentos_preparados AS ap ON api.alimentos_preparados_id = ap.alimentos_preparados_id
                    WHERE ic.id_inventarios_clientes = $id_cliente
                    AND api.motivo LIKE ('%Salida%')
                    $por_fecha
                    ORDER BY ic.nombre ASC";
        //drupal_set_message($query);
        $results = db_query($query);
        foreach ($results as $result) {
            if ($result) {
                $fecha = date_create($result->fecha);

                $total += $result->salida;
                $total_monto += $result->monto * $result->salida;
                $rows[] = array(
                    $result->nombre,
                    $result->alimento,
                    $result->monto * $result->salida,
                    $result->salida,
                    date_format($fecha, 'Y-M-d'),
                        //($cliente) ? db_query("SELECT nombre FROM inventarios_clientes where id_inventarios_clientes=$cliente")->fetchField() : "---",
                );
                $csv_rows[] = array(
                    $result->nombre,
                    $result->alimento,
                    $result->monto * $result->salida,
                    $result->salida,
                    date_format($fecha, 'Y-M-d'),
                );
            }
        }
        $rows[] = array(
            '<b>Total:</b>',
            '---',
            "<b>$total_monto</b>",
            "<b>$total</b>",
            '---',
        );

        //print_r($rows);
        // Cache the CSV export.
        //$csv_data = reportes2_store_csv('reporte de clientes', $csv_rows);
        // Build the page output holding the form, table, and CSV export link.
        $output = theme('table', array(
                    'header' => $header,
                    'rows' => $rows,
                    'attributes' => array('class' => array('mytable')),
                    'sort' => 'asc'
                ))
                //. '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
                . '<br /><div class="uc-reports-links">' . l('« volver', 'admin/content/inventario/clientes') . '</div>';
        /* $output = theme('table', $header, $rows, array('width' => '100%', 'class' => 'uc-sales-table', 'style' => 'text-align: center'))
          . '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
          . '<br /><div class="uc-reports-links">' . l('Ingresar una nueva materia prima', 'admin/content/inventarios/registro_materias') . '</div>';
          drupal_set_message(print_r($rows)); */

        /*         * ****************************************************************************
         * REPORTES DE HUEVOS
         * ***************************************************************************** */
        $por_fecha = "";
        if (arg(6) > 0 && arg(7) > 0) {
            $por_fecha = ' and ipt.fecha_ingreso between ' . "'" . arg(6) . "'" . ' and ' . "'" . arg(7) . "'";
        }
        $total_huevos = 0;
        $total_peso = 0;
        $total_monto = 0;
        $rows = array();
        //alimentos_preparados_id 	fecha_ingreso 	cantidad_preparacion 	cantidad_actual 	motivo
        // Build the header for the report table.
        $header = array('Cliente', 'Monto Venta', 'Cantidad de Cartones', 'Peso Neto', 'Fecha de venta');
        // Build the header to the CSV export.
        $csv_rows = array(array('Cliente', 'Monto Venta', 'Cantidad de Cartones', 'Peso Neto', 'Fecha de venta'));
        $array_rows = array();
        //drupal_set_message($id_cliente);

        $query = "SELECT ic.nombre as nombre, ipt.monto as monto, ipt.cantidad_cartones as salida, ipt.peso_neto as peso, 
                            ipt.fecha_ingreso as fecha
                            FROM inventarios_clientes AS ic
                            INNER JOIN inventario_prod_terminado AS ipt ON ic.id_inventarios_clientes = ipt.proveedor
                            WHERE ic.id_inventarios_clientes = $id_cliente
                            AND ipt.motivo LIKE ('%Salida%')
                            $por_fecha
                            ORDER BY ic.nombre ASC";
        //drupal_set_message($query);
        $results = db_query($query);
        foreach ($results as $result) {
            if ($result) {
                $fecha = date_create($result->fecha);

                $salida = str_replace('-', '', $result->salida);
                $total_huevos += $salida;
                $total_monto += $result->monto;
                $total_peso += abs($result->peso);
                $rows[] = array(
                    $result->nombre,
                    abs($result->monto * $result->peso),
                    $salida,
                    abs($result->peso),
                    date_format($fecha, 'Y-M-d'),
                        //($cliente) ? db_query("SELECT nombre FROM inventarios_clientes where id_inventarios_clientes=$cliente")->fetchField() : "---",
                );
                $csv_rows[] = array(
                    $result->nombre,
                    abs($result->monto * $result->peso),
                    $salida,
                    abs($result->peso),
                    date_format($fecha, 'Y-M-d'),
                );
            }
        }
        $rows[] = array(
            '<b>Total:</b>',
            "<b>$total_monto</b>",
            "<b>$total_huevos</b>",
            "<b>$total_peso</b>",
            '---',
        );

        //print_r($rows);
        // Cache the CSV export.
        //$csv_data = reportes_store_csv('reporte de clientes', $csv_rows);
        // Build the page output holding the form, table, and CSV export link.
        $output2 = theme('table', array(
                    'header' => $header,
                    'rows' => $rows,
                    'attributes' => array('class' => array('mytable')),
                    'sort' => 'asc'
                ))
                //. '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
                . '<br /><div class="uc-reports-links">' . l('« volver', 'admin/content/inventario/clientes') . '</div>';
        /* $output = theme('table', $header, $rows, array('width' => '100%', 'class' => 'uc-sales-table', 'style' => 'text-align: center'))
          . '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
          . '<br /><div class="uc-reports-links">' . l('Ingresar una nueva materia prima', 'admin/content/inventarios/registro_materias') . '</div>';
          drupal_set_message(print_r($rows)); */

        return "<br/><h3>Salidas de alimentos: </h3><br/>" . $output . "<br/><h3>Salidas de producto terminado (huevo): </h3><br/>" . $output2 .
        drupal_render(drupal_get_form('system_reporte_clientes_form'));
        //return drupal_get_form('materias_lista_form');
    } else {
        drupal_goto('admin/content/inventario/inventario/clientes');
    }
}

function system_reporte_clientes_form($form, &$form_state) {
    $form = array();
    $form['date_ini'] = array(
        '#type' => 'date',
        '#title' => "Fecha de inicio del reporte:",
        '#required' => TRUE,
        '#description' => "Ingrese la fecha de inicio en la que desea filtrar el reporte.",
            //'#attributes' => array('class' => 'percentage', 'id' => 'txb_percentage'),
    );
    $form['date_fin'] = array(
        '#type' => 'date',
        '#title' => "Fecha de fin del reporte:",
        '#required' => TRUE,
        '#description' => "Ingrese la fecha de fin en la que desea filtrar el reporte.",
            //'#attributes' => array('class' => 'percentage', 'id' => 'txb_percentage'),
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => "Filtrar",
            //'#sufix' => '<br/>' . l('ver todo »', ),
    );
    return $form;
}

function system_reporte_clientes_form_submit($form, &$form_state) {
    if (arg(3) == "clientes" && arg(4) == "clientes_detalle" && arg(5) > 0) {
        $date_ini = $form_state['values']['date_ini'];
        $date_fin = $form_state['values']['date_fin'];
        //drupal_set_message("date_ini: " . print_r($date_ini) . " - date_fin: " . print_r($date_fin));
        $fecha_ini = $date_ini['year'] . '-' . $date_ini['month'] . '-' . $date_ini['day'];
        $fecha_fin = $date_fin['year'] . '-' . $date_fin['month'] . '-' . $date_fin['day'];
        //drupal_set_message("date_ini: $fecha_ini - date_fin: $fecha_fin");
        //$fecha_ini = strtotime($fecha_ini);
        //$fecha_fin = strtotime($fecha_fin);
        //drupal_set_message("date_ini: $fecha_ini - date_fin: $fecha_fin");
        //$time1 = $fecha_ini - (3600 * 6);
        //$time2 = $fecha_fin + 64799;
        $form_state['redirect'] = 'admin/content/inventario/clientes/clientes_detalle/' . arg(5) . "/$fecha_ini/$fecha_fin";
    }
}

/* * ************************************************************************ */

function system_reporte_proveedores() {
    /*     * ***************************************************************************
     * REPORTES DE ALIMENTOS
     * ***************************************************************************** */
    if (arg(3) == "proveedores" && arg(4) == "proveedores_detalle" && arg(5) > 0) {
        $por_fecha = "";
        if (arg(6) > 0 && arg(7) > 0) {
            $por_fecha = ' and api.fecha_ingreso between ' . "'" . arg(6) . "'" . ' and ' . "'" . arg(7) . "'";
        }
        $id_proveedor = arg(5);
        $rows = array();
        //alimentos_preparados_id 	fecha_ingreso 	cantidad_preparacion 	cantidad_actual 	motivo
        // Build the header for the report table.
        $header = array('Cliente', 'Alimento', 'Monto', 'Cantidad', 'Fecha de venta');
        // Build the header to the CSV export.
        $csv_rows = array(array('Cliente', 'Alimento', 'Monto', 'Cantidad', 'Fecha de venta'));
        $array_rows = array();

        $total = 0;
        $total_monto = 0;

        //drupal_set_message($id_cliente);

        $query = "SELECT ap.nombre as alimento, ip.nombre as nombre, api.monto as monto, api.cant_salida as salida, 
                    api.fecha_ingreso as fecha
                    FROM inventarios_proveedores AS ip
                    INNER JOIN alimentos_preparados_inventario AS api ON ip.id_inventarios_proveedores = api.cliente
                    INNER JOIN alimentos_preparados AS ap ON api.alimentos_preparados_id = ap.alimentos_preparados_id
                    WHERE ip.id_inventarios_proveedores = $id_proveedor
                    AND api.motivo LIKE ('%Salida%')
                    $por_fecha
                    ORDER BY ip.nombre ASC";
        //drupal_set_message($query);
        $results = db_query($query);
        foreach ($results as $result) {
            if ($result) {
                $fecha = date_create($result->fecha);

                $total += $result->salida;
                $total_monto += $result->monto;
                $rows[] = array(
                    $result->nombre,
                    $result->alimento,
                    $result->monto,
                    $result->salida,
                    date_format($fecha, 'Y-M-d'),
                        //($cliente) ? db_query("SELECT nombre FROM inventarios_clientes where id_inventarios_clientes=$cliente")->fetchField() : "---",
                );
                $csv_rows[] = array(
                    $result->nombre,
                    $result->alimento,
                    $result->monto,
                    $result->salida,
                    date_format($fecha, 'Y-M-d'),
                );
            }
        }
        $rows[] = array(
            '<b>Total:</b>',
            '---',
            "<b>$total_monto</b>",
            "<b>$total</b>",
            '---',
        );

        //print_r($rows);
        // Cache the CSV export.
        //$csv_data = reportes2_store_csv('reporte de clientes', $csv_rows);
        // Build the page output holding the form, table, and CSV export link.
        $output = theme('table', array(
                    'header' => $header,
                    'rows' => $rows,
                    'attributes' => array('class' => array('mytable')),
                    'sort' => 'asc'
                ))
                //. '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
                . '<br /><div class="uc-reports-links">' . l('« volver', 'admin/content/inventario/clientes') . '</div>';
        /* $output = theme('table', $header, $rows, array('width' => '100%', 'class' => 'uc-sales-table', 'style' => 'text-align: center'))
          . '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
          . '<br /><div class="uc-reports-links">' . l('Ingresar una nueva materia prima', 'admin/content/inventarios/registro_materias') . '</div>';
          drupal_set_message(print_r($rows)); */

        /*         * ****************************************************************************
         * REPORTES DE HUEVOS
         * ***************************************************************************** */
        //if (arg(3) == "proveedores" && arg(4) == "proveedores_detalle" && arg(5) > 0) {
        $por_fecha = "";
        if (arg(6) > 0 && arg(7) > 0) {
            $por_fecha = ' and ipt.fecha_ingreso between ' . "'" . arg(6) . "'" . ' and ' . "'" . arg(7) . "'";
        }
        $id_proveedor = arg(5);
        $total_huevos = 0;
        $total_peso = 0;
        $total_monto = 0;
        $rows = array();
        //alimentos_preparados_id 	fecha_ingreso 	cantidad_preparacion 	cantidad_actual 	motivo
        // Build the header for the report table.
        $header = array('Proveedor', 'Estado del proveedor', 'Monto', 'Cantidad cartones', 'Kilos', 'Fecha de venta');
        // Build the header to the CSV export.
        $csv_rows = array(array('Proveedor', 'Estado del proveedor', 'Monto', 'Cantidad cartones', 'Kilos', 'Fecha de venta'));
        $array_rows = array();
        //drupal_set_message($id_cliente);

        $query = "SELECT ic.nombre as nombre, ipt.monto as monto, ipt.peso_neto as peso, ipt.cantidad_cartones as salida, 
                            ipt.fecha_ingreso as fecha, ic.estado as estado
                            FROM inventarios_proveedores AS ic
                            INNER JOIN inventario_prod_terminado AS ipt ON ic.id_inventarios_proveedores = ipt.proveedor
                            WHERE ic.id_inventarios_proveedores = $id_proveedor
                            AND ipt.motivo LIKE (
                            '%Ingreso%'
                            )
                            $por_fecha
                            ORDER BY ic.nombre ASC";
        //drupal_set_message("query: $query");
        $results = db_query($query);
        foreach ($results as $result) {
            if ($result) {
                $fecha = date_create($result->fecha);

                $salida = str_replace('-', '', $result->salida);
                $total_huevos += $salida;
                $total_monto += $result->monto;
                $total_peso += $result->peso;
                $rows[] = array(
                    $result->nombre,
                    ($result->estado) ? 'Activo' : 'Inactivo',
                    $result->monto,
                    $salida,
                    $result->peso,
                    date_format($fecha, 'Y-M-d'),
                        //($cliente) ? db_query("SELECT nombre FROM inventarios_clientes where id_inventarios_clientes=$cliente")->fetchField() : "---",
                );
                $csv_rows[] = array(
                    $result->nombre,
                    ($result->estado) ? 'Activo' : 'Inactivo',
                    $result->monto,
                    $salida,
                    $result->peso,
                    date_format($fecha, 'Y-M-d'),
                );
            }
        }
        $rows[] = array(
            '<b>Total:</b>',
            '---',
            "<b>$total_monto</b>",
            "<b>$total_huevos</b>",
            "<b>$total_peso</b>",
            '---',
        );

        //print_r($rows);
        // Cache the CSV export.
        //$csv_data = reportes_store_csv('reporte de clientes', $csv_rows);
        // Build the page output holding the form, table, and CSV export link.
        $output2 = theme('table', array(
                    'header' => $header,
                    'rows' => $rows,
                    'attributes' => array('class' => array('mytable')),
                    'sort' => 'asc'
                ))
                //. '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
                . '<br /><div class="uc-reports-links">' . l('« ir al listado de proveedores', 'admin/content/inventario/proveedores') . '</div>';
        /* $output = theme('table', $header, $rows, array('width' => '100%', 'class' => 'uc-sales-table', 'style' => 'text-align: center'))
          . '<div class="uc-reports-links">' . l(t('Export to CSV file.'), 'admin/store/reports/getcsv/' . $csv_data['report'] . '/' . $csv_data['user']) . '</div>'
          . '<br /><div class="uc-reports-links">' . l('Ingresar una nueva materia prima', 'admin/content/inventarios/registro_materias') . '</div>';
          drupal_set_message(print_r($rows)); */

        return "<br/><h3>Salidas de alimentos: </h3><br/>" . $output . 
        "<br/><h3>Salidas de producto terminado (huevo): </h3><br/>" . $output2 .
        drupal_render(drupal_get_form('system_reporte_proveedores_form'));
        //return drupal_get_form('materias_lista_form');
    } else {
        drupal_goto('admin/content/inventario/inventario/proveedores');
    }
}

function system_reporte_proveedores_form($form, &$form_state) {
    $form = array();
    $form['date_ini'] = array(
        '#type' => 'date',
        '#title' => "Fecha de inicio del reporte:",
        '#required' => TRUE,
        '#description' => "Ingrese la fecha de inicio en la que desea filtrar el reporte.",
            //'#attributes' => array('class' => 'percentage', 'id' => 'txb_percentage'),
    );
    $form['date_fin'] = array(
        '#type' => 'date',
        '#title' => "Fecha de fin del reporte:",
        '#required' => TRUE,
        '#description' => "Ingrese la fecha de fin en la que desea filtrar el reporte.",
            //'#attributes' => array('class' => 'percentage', 'id' => 'txb_percentage'),
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => "Filtrar",
            //'#sufix' => '<br/>' . l('ver todo »', ),
    );
    return $form;
}

function system_reporte_proveedores_form_submit($form, &$form_state) {
    if (arg(3) == "proveedores" && arg(4) == "proveedores_detalle" && arg(5) > 0) {
        $date_ini = $form_state['values']['date_ini'];
        $date_fin = $form_state['values']['date_fin'];
        //drupal_set_message("date_ini: " . print_r($date_ini) . " - date_fin: " . print_r($date_fin));
        $fecha_ini = $date_ini['year'] . '-' . $date_ini['month'] . '-' . $date_ini['day'];
        $fecha_fin = $date_fin['year'] . '-' . $date_fin['month'] . '-' . $date_fin['day'];
        //drupal_set_message("date_ini: $fecha_ini - date_fin: $fecha_fin");
        //$fecha_ini = strtotime($fecha_ini);
        //$fecha_fin = strtotime($fecha_fin);
        //drupal_set_message("date_ini: $fecha_ini - date_fin: $fecha_fin");
        //$time1 = $fecha_ini - (3600 * 6);
        //$time2 = $fecha_fin + 64799;

        $form_state['redirect'] = 'admin/content/inventario/proveedores/proveedores_detalle/' . arg(5) . "/$fecha_ini/$fecha_fin";
    }
}

/**
 * @see proveedores_liquidacion_report_form()
 */
/*function proveedores_report_form_submit($form, &$form_state) {
    //drupal_goto('admin/store/reports/sales/provider/year/'. $form_state['values']['year'] .'/'. $form_state['values']['provider']);
    $form_state['redirect'] = 'admin/store/reports/liquidations/year/' . $form_state['values']['year'] . '/' . $form_state['values']['provider'];
}
 * 
 */
